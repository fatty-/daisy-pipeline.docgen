<reference id="d2817e59">
   <title>p:declare-step</title>
   <abstract>
      <shortdesc>
         <xd:short xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step"
                   xmlns:cx="http://xmlcalabash.com/ns/extensions"
                   xmlns:fn="http://www.w3.org/2005/xpath-functions"
                   xmlns:d="http://www.example.org/documenter"
                   xmlns:xd="http://pipeline.daisy.org/ns/sample/doc">Generates DITA-documentation from all XQuery files in $path / $resolvedPath and
            saves it in $resolvedOut.</xd:short>
      </shortdesc>
   </abstract>
   <prolog>
      <metadata>
         <audience type="programmer" job="programming" experiencelevel="expert"/>
         <othermeta name="programming-language" content="XProc"/>
      </metadata>
   </prolog>
   <refbody>
      <section>
         <apiname>p:declare-step</apiname>
      </section>
      <section outputclass="parameters xproc-inputs">
         <title outputclass="io-header">Inputs</title>
         <parml outputclass="xproc-inputs">
            <plentry>
               <pt>source</pt>
               <pt>true</pt>
               <pt/>
               <pt/>
               <pd/>
            </plentry>
         </parml>
      </section>
      <section outputclass="parameters xproc-outputs">
         <title outputclass="io-header">Outputs</title>
         <parml outputclass="xproc-outputs">
            <plentry>
               <pt>result</pt>
               <pt>true</pt>
               <pt/>
               <pt/>
               <pd>
                  <xd:output xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step"
                             xmlns:cx="http://xmlcalabash.com/ns/extensions"
                             xmlns:fn="http://www.w3.org/2005/xpath-functions"
                             xmlns:d="http://www.example.org/documenter"
                             xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"
                             port="result">Gives out a list of the resulting DITA-files on the form:<codeblock outputclass="language-xslt">
        &lt;c:result&gt;
            &lt;c:file ext="lower case file extension, typically xq, xquery or xqy"
                    rel="relative path to input file"
                    name="filename of input file"
                    abs="full path to input file"&gt;
                &lt;c:result rel="relative path to output file"
                          name="filename of output file"
                          abs="absolute path to output file"/&gt;
                &lt;c:result rel="relative path to output file"
                          name="filename of output file"
                          abs="absolute path to output file"/&gt;
            &lt;/c:file&gt;
            &lt;c:file ext="lower case file extension, typically xq, xquery or xqy"
                    rel="relative path to input file"
                    name="filename of input file"
                    abs="full path to input file"&gt;
                &lt;c:result rel="relative path to output file"
                          name="filename of output file"
                          abs="absolute path to output file"/&gt;
                &lt;c:result rel="relative path to output file"
                          name="filename of output file"
                          abs="absolute path to output file"/&gt;
            &lt;/c:file&gt;
        &lt;/c:result&gt;
        </codeblock>
                  </xd:output>
               </pd>
            </plentry>
         </parml>
      </section>
      <section outputclass="parameters xproc-options">
         <title outputclass="io-header">Options</title>
         <parml outputclass="xproc-options">
            <plentry>
               <pt>path</pt>
               <pt>true</pt>
               <pd/>
            </plentry>
            <plentry>
               <pt>self-path</pt>
               <pt>true</pt>
               <pd/>
            </plentry>
            <plentry>
               <pt>resolvedPath</pt>
               <pt>true</pt>
               <pd/>
            </plentry>
            <plentry>
               <pt>resolvedOut</pt>
               <pt>true</pt>
               <pd/>
            </plentry>
            <plentry>
               <pt>resolvedTemp</pt>
               <pt>true</pt>
               <pd/>
            </plentry>
         </parml>
      </section>
   </refbody>
   <related-links>
      <linklist>
         <title>Dependencies (p:document)</title>
         <link href="xqDoc/xqdoc.xsl" format="ditamap"/>
         <linkinfo>These dependencies are derived from documents loaded with the p:document
                step in the XProc script.</linkinfo>
      </linklist>
   </related-links>
   <section outputclass="sourcecode">
      <title outputclass="sourcecode-header">Source Code</title>
      <codeblock>&lt;p:declare-step type="d:document-xquery-dita" xmlns:p="http://www.w3.org/ns/xproc" xmlns:cx="http://xmlcalabash.com/ns/extensions"&gt;
        &lt;p:option name="path" required="true"/&gt;
        &lt;p:option name="self-path" required="true"/&gt;
        &lt;p:option name="resolvedPath" required="true"/&gt;
        &lt;p:option name="resolvedOut" required="true"/&gt;
        &lt;p:option name="resolvedTemp" required="true"/&gt;

        &lt;p:input port="source" primary="true"/&gt;
        &lt;p:output port="result" primary="true"/&gt;

        &lt;p:for-each&gt;
            &lt;p:output port="result" primary="true" sequence="true"&gt;
                &lt;p:pipe port="result" step="document-xquery-dita-done"/&gt;
            &lt;/p:output&gt;

            &lt;p:iteration-source select="/c:directory/c:file"/&gt;

            &lt;p:variable name="fileName" select="/c:file/@name"/&gt;
            &lt;p:variable name="fileRel" select="/c:file/@relative"/&gt;
            &lt;p:variable name="fileAbs" select="resolve-uri($fileRel,$resolvedPath)"/&gt;
            &lt;p:variable name="ext" select="fn:lower-case(fn:tokenize(/c:file/@name, '\.')[last()])"/&gt;

            &lt;p:choose&gt;
                &lt;p:when test="$ext = 'xq' or $ext = 'xquery' or $ext = 'xqy'"&gt;
                    &lt;cx:message&gt;
                        &lt;p:with-option name="message" select="concat('XQuery: ',$fileRel)"/&gt;
                    &lt;/cx:message&gt;
                    &lt;p:exec&gt;
                        &lt;p:with-option name="command" select="'mkdir'"/&gt;
                        &lt;p:with-option name="args" select="$resolvedTemp"/&gt;
                        &lt;p:with-option name="source-is-xml" select="false()"/&gt;
                        &lt;p:with-option name="result-is-xml" select="false()"/&gt;
                    &lt;/p:exec&gt;
                    &lt;p:sink/&gt;
                    &lt;p:exec&gt;
                        &lt;p:with-option name="command" select="'xqDoc/xqdoc.sh'"/&gt;
                        &lt;p:with-option name="args" select="concat($fileAbs,' ',$ext,' NOV2005 default none ',$resolvedTemp))"/&gt;
                        &lt;p:with-option name="source-is-xml" select="false()"/&gt;
                        &lt;p:with-option name="result-is-xml" select="false()"/&gt;
                    &lt;/p:exec&gt;
                    &lt;p:load&gt;
                        &lt;p:with-option name="href" select="concat($fileName,'.html')"/&gt;
                    &lt;/p:load&gt;
                    &lt;p:try&gt;
                        &lt;p:group&gt;
                            &lt;p:unescape-markup content-type="text/html"/&gt;
                            &lt;p:unwrap match="/c:result"/&gt;
                        &lt;/p:group&gt;
                        &lt;p:catch&gt;
                            &lt;p:identity/&gt;
                        &lt;/p:catch&gt;
                    &lt;/p:try&gt;
                    &lt;p:xslt&gt;
                        &lt;p:input port="parameters"&gt;
                            &lt;p:empty/&gt;
                        &lt;/p:input&gt;
                        &lt;p:input port="stylesheet"&gt;
                            &lt;p:document href="xqDoc/xqdoc.xsl"/&gt;
                        &lt;/p:input&gt;
                    &lt;/p:xslt&gt;

                    &lt;p:choose&gt;
                        &lt;p:when test="count(/dita/reference) &gt; 0"&gt;
                            &lt;p:for-each&gt;
                                &lt;p:iteration-source select="/dita/reference"/&gt;

                                &lt;p:variable name="newExt" select="concat('.',/reference/@id,'.dita')"/&gt;

                                &lt;p:store name="apiFragmentStored"&gt;
                                    &lt;p:with-option name="href" select="concat($resolvedOut,'/',$fileRel,$newExt)"/&gt;
                                    &lt;p:with-option name="indent" select="'true'"/&gt;
                                    &lt;!--p:with-option name="doctype-public"
                                        select="'-//OASIS//DTD DITA Reference//EN'"/&gt;
                                    &lt;p:with-option name="doctype-system" select="concat($self-path,'/documenter/tools/ditaot/dtd/technicalContent/dtd/reference.dtd')"/--&gt;
                                &lt;/p:store&gt;

                                &lt;p:identity&gt;
                                    &lt;p:input port="source"&gt;
                                        &lt;p:pipe port="result" step="apiFragmentStored"/&gt;
                                    &lt;/p:input&gt;
                                &lt;/p:identity&gt;

                                &lt;p:add-attribute attribute-name="name" match="/c:result"&gt;
                                    &lt;p:with-option name="attribute-value" select="concat($fileName,$newExt)"/&gt;
                                &lt;/p:add-attribute&gt;
                                &lt;p:add-attribute attribute-name="rel" match="/c:result"&gt;
                                    &lt;p:with-option name="attribute-value" select="concat($fileRel,$newExt)"/&gt;
                                &lt;/p:add-attribute&gt;
                                &lt;p:add-attribute attribute-name="abs" match="/c:result"&gt;
                                    &lt;p:with-option name="attribute-value" select="concat($resolvedOut,'/',$fileRel,$newExt)"/&gt;
                                &lt;/p:add-attribute&gt;

                                &lt;cx:message&gt;
                                    &lt;p:with-option name="message" select="concat('saved: ',node())"/&gt;
                                &lt;/cx:message&gt;
                            &lt;/p:for-each&gt;

                            &lt;p:wrap-sequence wrapper="c:file"/&gt;
                            &lt;p:add-attribute attribute-name="name" match="/c:file"&gt;
                                &lt;p:with-option name="attribute-value" select="$fileName"/&gt;
                            &lt;/p:add-attribute&gt;
                            &lt;p:add-attribute attribute-name="rel" match="/c:file"&gt;
                                &lt;p:with-option name="attribute-value" select="$fileRel"/&gt;
                            &lt;/p:add-attribute&gt;
                            &lt;p:add-attribute attribute-name="abs" match="/c:file"&gt;
                                &lt;p:with-option name="attribute-value" select="$fileAbs"/&gt;
                            &lt;/p:add-attribute&gt;
                            &lt;p:add-attribute attribute-name="ext" match="/c:file"&gt;
                                &lt;p:with-option name="attribute-value" select="$ext"/&gt;
                            &lt;/p:add-attribute&gt;
                        &lt;/p:when&gt;
                        &lt;p:otherwise&gt;
                            &lt;p:sink/&gt;
                            &lt;p:identity&gt;
                                &lt;p:input port="source"&gt;
                                    &lt;p:empty/&gt;
                                &lt;/p:input&gt;
                            &lt;/p:identity&gt;
                        &lt;/p:otherwise&gt;
                    &lt;/p:choose&gt;

                &lt;/p:when&gt;
                &lt;p:otherwise&gt;
                    &lt;p:sink/&gt;
                    &lt;p:identity&gt;
                        &lt;p:input port="source"&gt;
                            &lt;p:empty/&gt;
                        &lt;/p:input&gt;
                    &lt;/p:identity&gt;
                &lt;/p:otherwise&gt;
            &lt;/p:choose&gt;

            &lt;p:identity name="document-xquery-dita-done"/&gt;
        &lt;/p:for-each&gt;

        &lt;p:wrap-sequence wrapper="c:result"/&gt;
    &lt;/p:declare-step&gt;</codeblock>
   </section>
</reference>