<reference id="d92e1">
   <title>p:library</title>
   <abstract>
      <shortdesc>
         <xd:short xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step" xmlns:cx="http://xmlcalabash.com/ns/extensions" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:d="http://www.example.org/documenter">Steps for documenting XProc documents in DITA.</xd:short>
      </shortdesc>
   </abstract>
   <prolog>
      <author type="creator">
         <xd:name xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step" xmlns:cx="http://xmlcalabash.com/ns/extensions" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:d="http://www.example.org/documenter">Jostein Austvik Jacobsen</xd:name> (<xd:mailto xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step" xmlns:cx="http://xmlcalabash.com/ns/extensions" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:d="http://www.example.org/documenter">josteinaj@gmail.com</xd:mailto>), <xd:organization xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step" xmlns:cx="http://xmlcalabash.com/ns/extensions" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:d="http://www.example.org/documenter">NLB</xd:organization>
      </author>
      <copyright>
         <copyryear year="2010"/>
         <copyrholder>
            <xd:holder xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" xmlns:p="http://www.w3.org/ns/xproc" xmlns:c="http://www.w3.org/ns/xproc-step" xmlns:cx="http://xmlcalabash.com/ns/extensions" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:d="http://www.example.org/documenter">DAISY Consortium</xd:holder>
         </copyrholder>
      </copyright>
      <metadata>
         <audience type="programmer" job="programming" experiencelevel="expert"/>
         <othermeta name="programming-language" content="XProc"/>
         <othermeta name="version" content="0.1"/>
         <othermeta name="xproc-version" content="1.0"/>
      </metadata>
   </prolog>
   <refbody>
      <section>
         <apiname>p:library</apiname>
      </section>
   </refbody>
   <related-links>
      <linklist>
         <title>Dependencies (p:import)</title>
         <link href="http://xmlcalabash.com/extension/steps/library-1.0.xpl" format="ditamap"/>
         <linkinfo>These dependencies are derived from the p:import statements from the XProc
                script.</linkinfo>
      </linklist>
      <linklist>
         <title>Dependencies (p:document)</title>
         <link format="ditamap" href="xpDoc/xpdoc.xsl.ditamap"/>
         <linkinfo>These dependencies are derived from documents loaded with the p:document
                step in the XProc script.</linkinfo>
      </linklist>
   </related-links>
   <section outputclass="sourcecode">
      <title outputclass="sourcecode-header">Source Code</title>
      <codeblock>&lt;p:library version="1.0" xmlns:p="http://www.w3.org/ns/xproc" xmlns:cx="http://xmlcalabash.com/ns/extensions" xmlns:d="http://www.example.org/documenter" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;

    &lt;p:documentation xd:target="parent"&gt;
        &lt;xd:short&gt;Steps for documenting XProc documents in DITA.&lt;/xd:short&gt;
        &lt;xd:author&gt;
            &lt;xd:name&gt;Jostein Austvik Jacobsen&lt;/xd:name&gt;
            &lt;xd:mailto&gt;josteinaj@gmail.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;NLB&lt;/xd:organization&gt;
        &lt;/xd:author&gt;
        &lt;xd:copyright&gt;
            &lt;xd:year&gt;2010&lt;/xd:year&gt;
            &lt;xd:holder&gt;DAISY Consortium&lt;/xd:holder&gt;
        &lt;/xd:copyright&gt;
        &lt;xd:version&gt;0.1&lt;/xd:version&gt;
    &lt;/p:documentation&gt;

    &lt;p:import href="http://xmlcalabash.com/extension/steps/library-1.0.xpl"/&gt;

    &lt;p:documentation xd:target="following"&gt;
        &lt;xd:short&gt;Generates DITA-documentation from all XProc files in $path / $resolvedPath and
            saves it in $resolvedOut.&lt;/xd:short&gt;
        &lt;xd:author&gt;
            &lt;xd:name&gt;Jostein Austvik Jacobsen&lt;/xd:name&gt;
            &lt;xd:mailto&gt;josteinaj@gmail.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;NLB&lt;/xd:organization&gt;
        &lt;/xd:author&gt;
        &lt;xd:copyright&gt;
            &lt;xd:year&gt;2010&lt;/xd:year&gt;
            &lt;xd:holder&gt;DAISY Consortium&lt;/xd:holder&gt;
        &lt;/xd:copyright&gt;
        &lt;xd:option name="srcPath"&gt;the path to the source code&lt;/xd:option&gt;
        &lt;xd:option name="tempPath"&gt;path to temporary storage area&lt;/xd:option&gt;
        &lt;xd:option name="ditaPath"&gt;path pointing to the DITA output directory&lt;/xd:option&gt;
        &lt;xd:option name="selfPath"&gt;path to the documentation module&lt;/xd:option&gt;
        &lt;xd:output port="result"&gt;Gives out a list of the resulting DITA-map-files on the form:&lt;xd:code&gt;
        &amp;lt;c:result&gt;
            &amp;lt;c:result type="xproc"&gt;relative path to output file&amp;lt;/c:result&gt;
            &amp;lt;c:result type="xproc"&gt;relative path to output file&amp;lt;/c:result&gt;
        &amp;lt;/c:result&gt;
        &lt;/xd:code&gt;
        &lt;/xd:output&gt;
    &lt;/p:documentation&gt;
    &lt;p:declare-step type="d:document-xproc-dita"&gt;
        &lt;p:option name="srcPath" required="true"/&gt;
        &lt;p:option name="tempPath" required="true"/&gt;
        &lt;p:option name="ditaPath" required="true"/&gt;
        &lt;p:option name="selfPath" required="true"/&gt;

        &lt;p:input port="source" primary="true"/&gt;
        &lt;p:output port="result" primary="true"/&gt;

        &lt;p:for-each&gt;
            &lt;p:output port="result" primary="true" sequence="true"&gt;
                &lt;p:pipe port="result" step="document-xproc-dita-done"/&gt;
            &lt;/p:output&gt;

            &lt;p:iteration-source select="/c:directory/c:file"/&gt;

            &lt;p:variable name="fileName" select="/c:file/@name"/&gt;
            &lt;p:variable name="fileRel" select="/c:file/@relative"/&gt;
            &lt;p:variable name="fileAbs" select="resolve-uri($fileRel,$srcPath)"/&gt;
            &lt;p:variable name="ext" select="fn:lower-case(fn:tokenize(/c:file/@name, '\.')[last()])"/&gt;

            &lt;p:choose&gt;
                &lt;p:when test="$ext = 'xpl' or $ext = 'xproc'"&gt;
                    &lt;cx:message&gt;
                        &lt;p:with-option name="message" select="concat('XProc: ',$fileRel)"/&gt;
                    &lt;/cx:message&gt;
                    &lt;p:load&gt;
                        &lt;p:with-option name="href" select="$fileAbs"/&gt;
                    &lt;/p:load&gt;
                    &lt;p:xslt&gt;
                        &lt;p:input port="parameters"&gt;
                            &lt;p:empty/&gt;
                        &lt;/p:input&gt;
                        &lt;p:input port="stylesheet"&gt;
                            &lt;p:document href="xpDoc/xpdoc.xsl"/&gt;
                        &lt;/p:input&gt;
                    &lt;/p:xslt&gt;
                    &lt;p:choose&gt;
                        &lt;p:when test="count(/dita/reference) &gt; 0"&gt;
                            &lt;p:for-each&gt;
                                &lt;p:iteration-source select="/dita/reference"/&gt;

                                &lt;p:variable name="newExt" select="concat('.',/reference/@id,'.dita')"/&gt;

                                &lt;p:store name="apiFragmentStored"&gt;
                                    &lt;p:with-option name="href" select="concat($ditaPath,'/doc/',$fileRel,$newExt)"/&gt;
                                    &lt;p:with-option name="indent" select="'true'"/&gt;
                                &lt;/p:store&gt;

                                &lt;p:identity&gt;
                                    &lt;p:input port="source"&gt;
                                        &lt;p:pipe port="result" step="apiFragmentStored"/&gt;
                                    &lt;/p:input&gt;
                                &lt;/p:identity&gt;

                                &lt;p:add-attribute attribute-name="name" match="/c:result"&gt;
                                    &lt;p:with-option name="attribute-value" select="concat($fileName,$newExt)"/&gt;
                                &lt;/p:add-attribute&gt;
                                &lt;p:add-attribute attribute-name="rel" match="/c:result"&gt;
                                    &lt;p:with-option name="attribute-value" select="concat($fileRel,$newExt)"/&gt;
                                &lt;/p:add-attribute&gt;
                                &lt;p:add-attribute attribute-name="abs" match="/c:result"&gt;
                                    &lt;p:with-option name="attribute-value" select="concat($ditaPath,'/doc/',$fileRel,$newExt)"/&gt;
                                &lt;/p:add-attribute&gt;

                                &lt;cx:message&gt;
                                    &lt;p:with-option name="message" select="concat('saved: ',node())"/&gt;
                                &lt;/cx:message&gt;
                            &lt;/p:for-each&gt;

                            &lt;p:wrap-sequence wrapper="c:file"/&gt;
                            &lt;p:add-attribute attribute-name="name" match="/c:file"&gt;
                                &lt;p:with-option name="attribute-value" select="$fileName"/&gt;
                            &lt;/p:add-attribute&gt;
                            &lt;p:add-attribute attribute-name="rel" match="/c:file"&gt;
                                &lt;p:with-option name="attribute-value" select="$fileRel"/&gt;
                            &lt;/p:add-attribute&gt;
                            &lt;p:add-attribute attribute-name="abs" match="/c:file"&gt;
                                &lt;p:with-option name="attribute-value" select="$fileAbs"/&gt;
                            &lt;/p:add-attribute&gt;
                            &lt;p:add-attribute attribute-name="ext" match="/c:file"&gt;
                                &lt;p:with-option name="attribute-value" select="$ext"/&gt;
                            &lt;/p:add-attribute&gt;
                        &lt;/p:when&gt;
                        &lt;p:otherwise&gt;
                            &lt;p:sink/&gt;
                            &lt;p:identity&gt;
                                &lt;p:input port="source"&gt;
                                    &lt;p:empty/&gt;
                                &lt;/p:input&gt;
                            &lt;/p:identity&gt;
                        &lt;/p:otherwise&gt;
                    &lt;/p:choose&gt;

                &lt;/p:when&gt;
                &lt;p:otherwise&gt;
                    &lt;p:sink/&gt;
                    &lt;p:identity&gt;
                        &lt;p:input port="source"&gt;
                            &lt;p:empty/&gt;
                        &lt;/p:input&gt;
                    &lt;/p:identity&gt;
                &lt;/p:otherwise&gt;
            &lt;/p:choose&gt;

            &lt;p:identity name="document-xproc-dita-done"/&gt;
        &lt;/p:for-each&gt;

        &lt;p:wrap-sequence wrapper="c:result"/&gt;
    &lt;/p:declare-step&gt;

    &lt;p:documentation xd:target="following"&gt;
        &lt;xd:option name="srcPath"&gt;the path to the source code&lt;/xd:option&gt;
        &lt;xd:option name="tempPath"&gt;path to temporary storage area&lt;/xd:option&gt;
        &lt;xd:option name="ditaPath"&gt;path pointing to the DITA output directory&lt;/xd:option&gt;
        &lt;xd:option name="selfPath"&gt;path to the documentation module&lt;/xd:option&gt;
        &lt;xd:detail&gt;Generates DITA-documentation and corresponding DITA-maps from all XProc files in
            $path / $resolvedPath and saves it in $resolvedOut.&lt;/xd:detail&gt;
        &lt;xd:input port="source"&gt;List of all files in the module.&lt;/xd:input&gt;
        &lt;xd:output port="result"&gt;Gives out a list of the resulting DITA-maps on the form:&lt;xd:code&gt;
        &amp;lt;c:result&gt;
            &amp;lt;c:file ext="lower case file extension, typically xpl or xproc"
                    rel="relative path to input file"
                    name="filename of input file"
                    abs="full path to input file"&gt;
                &amp;lt;c:result rel="relative path to output file"
                          name="filename of output file"
                          abs="absolute path to output file"/&gt;
                &amp;lt;c:result rel="relative path to output file"
                          name="filename of output file"
                          abs="absolute path to output file"/&gt;
            &amp;lt;/c:file&gt;
            &amp;lt;c:file ext="lower case file extension, typically xpl or xproc"
                    rel="relative path to input file"
                    name="filename of input file"
                    abs="full path to input file"&gt;
                &amp;lt;c:result rel="relative path to output file"
                          name="filename of output file"
                          abs="absolute path to output file"/&gt;
                &amp;lt;c:result rel="relative path to output file"
                          name="filename of output file"
                          abs="absolute path to output file"/&gt;
            &amp;lt;/c:file&gt;
        &amp;lt;/c:result&gt;&lt;/xd:code&gt;
        &lt;/xd:output&gt;
    &lt;/p:documentation&gt;
    &lt;p:declare-step type="d:document-xproc-ditamap"&gt;
        &lt;p:option name="srcPath" required="true"/&gt;
        &lt;p:option name="tempPath" required="true"/&gt;
        &lt;p:option name="ditaPath" required="true"/&gt;
        &lt;p:option name="selfPath" required="true"/&gt;

        &lt;p:input port="source" primary="true"/&gt;
        &lt;p:output port="result" primary="true"/&gt;

        &lt;d:document-xproc-dita&gt;
            &lt;p:with-option name="srcPath" select="$srcPath"/&gt;
            &lt;p:with-option name="tempPath" select="$tempPath"/&gt;
            &lt;p:with-option name="ditaPath" select="$ditaPath"/&gt;
            &lt;p:with-option name="selfPath" select="$selfPath"/&gt;
        &lt;/d:document-xproc-dita&gt;

        &lt;p:for-each&gt;
            &lt;p:output port="result" primary="true"&gt;
                &lt;p:pipe port="result" step="document-xproc-ditamap-done"/&gt;
            &lt;/p:output&gt;

            &lt;p:iteration-source select="/c:result/c:file"/&gt;

            &lt;p:variable name="name" select="/c:file/@name"/&gt;
            &lt;p:variable name="rel" select="/c:file/@rel"/&gt;
            &lt;p:variable name="abs" select="/c:file/@abs"/&gt;
            &lt;p:variable name="ext" select="/c:file/@ext"/&gt;

            &lt;p:variable name="mapFile" select="resolve-uri(concat(/c:file/@name,'.ditamap'),/c:file/c:result[1]/@abs)"/&gt;
            &lt;cx:message&gt;
                &lt;p:with-option name="message" select="$mapFile"/&gt;
            &lt;/cx:message&gt;

            &lt;p:xslt&gt;
                &lt;p:with-param name="rel" select="$rel"/&gt;
                &lt;p:input port="stylesheet"&gt;
                    &lt;p:inline&gt;
                        &lt;xsl:stylesheet version="2.0" exclude-result-prefixes="cx fn d xd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;

                            &lt;xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" omit-xml-declaration="yes"/&gt;

                            &lt;xsl:param name="rel" required="yes"/&gt;

                            &lt;xsl:template match="/c:file"&gt;
                                &lt;xsl:element name="map"&gt;
                                    &lt;xsl:attribute name="title"&gt;
                                        &lt;xsl:value-of select="$rel"/&gt;
                                    &lt;/xsl:attribute&gt;
                                    &lt;xsl:if test="count(./c:result)&gt;0"&gt;
                                        &lt;xsl:element name="topicref"&gt;
                                            &lt;xsl:attribute name="format"&gt;
                                                &lt;xsl:value-of select="'dita'"/&gt;
                                            &lt;/xsl:attribute&gt;
                                            &lt;xsl:attribute name="href"&gt;
                                                &lt;xsl:value-of select="./c:result[1]/@name"/&gt;
                                            &lt;/xsl:attribute&gt;
                                            &lt;xsl:for-each select="./c:result[position()&gt;1]"&gt;
                                                &lt;xsl:element name="topicref"&gt;
                                                  &lt;xsl:attribute name="href"&gt;
                                                  &lt;xsl:value-of select="@name"/&gt;
                                                  &lt;/xsl:attribute&gt;
                                                  &lt;xsl:attribute name="format"&gt;
                                                  &lt;xsl:value-of select="'dita'"/&gt;
                                                  &lt;/xsl:attribute&gt;
                                                &lt;/xsl:element&gt;
                                            &lt;/xsl:for-each&gt;
                                        &lt;/xsl:element&gt;
                                    &lt;/xsl:if&gt;
                                &lt;/xsl:element&gt;
                            &lt;/xsl:template&gt;

                            &lt;xsl:template match="@*|text()|comment()|processing-instruction()"&gt;
                                &lt;xsl:copy&gt;
                                    &lt;xsl:apply-templates select="@*|node()"/&gt;
                                &lt;/xsl:copy&gt;
                            &lt;/xsl:template&gt;

                            &lt;!--xsl:template match="c:result"&gt;
                                &lt;xsl:element name="topicref"&gt;
                                    &lt;xsl:attribute name="href"&gt;
                                        &lt;xsl:value-of select="@name"/&gt;
                                    &lt;/xsl:attribute&gt;
                                &lt;/xsl:element&gt;
                            &lt;/xsl:template--&gt;
                        &lt;/xsl:stylesheet&gt;
                    &lt;/p:inline&gt;
                &lt;/p:input&gt;
            &lt;/p:xslt&gt;

            &lt;p:store name="apiStored"&gt;
                &lt;p:with-option name="href" select="$mapFile"/&gt;
                &lt;p:with-option name="indent" select="'true'"/&gt;
            &lt;/p:store&gt;

            &lt;p:identity&gt;
                &lt;p:input port="source"&gt;
                    &lt;p:pipe port="result" step="apiStored"/&gt;
                &lt;/p:input&gt;
            &lt;/p:identity&gt;

            &lt;p:documentation&gt;
                &lt;xd:short&gt;Strip 'file:' from beginning of URLs (useful when interacting with the
                    command line).&lt;/xd:short&gt;
            &lt;/p:documentation&gt;
            &lt;p:xslt&gt;
                &lt;p:input port="parameters"&gt;
                    &lt;p:empty/&gt;
                &lt;/p:input&gt;
                &lt;p:input port="stylesheet"&gt;
                    &lt;p:inline&gt;
                        &lt;xsl:stylesheet version="2.0" exclude-result-prefixes="cx fn d xd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
                            &lt;xsl:template match="@*|node()"&gt;
                                &lt;xsl:copy&gt;
                                    &lt;xsl:for-each select="@*|node()"&gt;
                                        &lt;xsl:choose&gt;
                                            &lt;xsl:when test="self::text()"&gt;&lt;xsl:value-of select="replace(.,'^file:','')"/&gt;&lt;/xsl:when&gt;
                                            &lt;xsl:otherwise&gt;
                                                &lt;xsl:apply-templates select="@*|node()"/&gt;
                                            &lt;/xsl:otherwise&gt;
                                        &lt;/xsl:choose&gt;
                                    &lt;/xsl:for-each&gt;
                                &lt;/xsl:copy&gt;
                            &lt;/xsl:template&gt;
                        &lt;/xsl:stylesheet&gt;
                    &lt;/p:inline&gt;
                &lt;/p:input&gt;
            &lt;/p:xslt&gt;

            &lt;p:add-attribute match="/c:result" attribute-name="type" attribute-value="xproc"/&gt;
            &lt;p:add-attribute match="/c:result" attribute-name="name"&gt;
                &lt;p:with-option name="attribute-value" select="$name"/&gt;
            &lt;/p:add-attribute&gt;
            &lt;p:add-attribute match="/c:result" attribute-name="rel"&gt;
                &lt;p:with-option name="attribute-value" select="$rel"/&gt;
            &lt;/p:add-attribute&gt;
            &lt;p:add-attribute match="/c:result" attribute-name="abs"&gt;
                &lt;p:with-option name="attribute-value" select="$abs"/&gt;
            &lt;/p:add-attribute&gt;
            &lt;p:add-attribute match="/c:result" attribute-name="ext"&gt;
                &lt;p:with-option name="attribute-value" select="$ext"/&gt;
            &lt;/p:add-attribute&gt;

            &lt;p:identity name="document-xproc-ditamap-done"/&gt;
        &lt;/p:for-each&gt;

        &lt;p:wrap-sequence wrapper="c:result"/&gt;

    &lt;/p:declare-step&gt;

&lt;/p:library&gt;</codeblock>
   </section>
</reference>