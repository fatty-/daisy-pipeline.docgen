<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE utfx:tests PUBLIC "-//UTF-X//DTD utfx-tests 1.0//EN" "utfx_tests.dtd">
<utfx:tests xmlns:utfx="http://utfx.org/test-definition"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <utfx:stylesheet src="xsdoc.xsl"/>
   <utfx:test>
      <utfx:name>xsl:transform</utfx:name>
      <utfx:assert-equal>
         <utfx:source>
            <xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">
               <xd:doc>
                  <xd:short>Short description.</xd:short>
               </xd:doc>
            </xsl:transform>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d88e2">
                  <title>xsl:transform</title>
                  <abstract>
                     <shortdesc>Short description.</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:transform</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:transform version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:transform&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:copyright</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:copyright>
                     <xd:year>2011</xd:year>
                     <xd:name>Copyright Holder</xd:name>
                     <xd:mailto>copyright.holder@example.com</xd:mailto>
                     <xd:organization>Copyright Holder Inc.</xd:organization>
                  </xd:copyright>
                  <xd:copyright>
                     <xd:year>2011</xd:year>
                     <xd:holder>Copyright Holder</xd:holder>
                  </xd:copyright>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d113e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <copyright>
                        <copyryear year="2011"/>
                        <copyrholder>Copyright Holder</copyrholder>
                     </copyright>
                     <copyright>
                        <copyryear year="2011"/>
                        <copyrholder>Copyright Holder</copyrholder>
                     </copyright>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:strip-space</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc>
                  <xd:short>xsl:strip-space</xd:short>
                  <xd:detail>xsl:strip-space should be documented automatically.</xd:detail>
               </xd:doc>

               <xsl:strip-space elements="country company price year"/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d176e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:strip-space</shortdesc>xsl:strip-space should be documented
                     automatically.</abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                        <othermeta name="strip-spaces" content="country company price year"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:version</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:version>1.0</xd:version>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d212e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="version" content="1.0"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:output</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc xd:target="parent">
                  <xd:short>xsl:output</xd:short>
                  <xd:detail>Should be documented automatically.</xd:detail>
               </xd:doc>

               <xsl:output method="xml" doctype-public="-//OASIS//DTD DITA Reference//EN" doctype-system="reference.dtd" encoding="UTF-8" indent="yes" media-type="application/xml" omit-xml-declaration="no" standalone="no"/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d240e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:output</shortdesc>Should be documented automatically. </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt>xml</pt>
                           <pt>yes</pt>
                           <pt>reference.dtd</pt>
                           <pt>-//OASIS//DTD DITA Reference//EN</pt>
                           <pt>yes</pt>
                           <pt>UTF-8</pt>
                           <pt>application/xml</pt>
                           <pt>no</pt>
                           <pt>true</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:output method="xml" doctype-public="-//OASIS//DTD DITA Reference//EN" doctype-system="reference.dtd" encoding="UTF-8" indent="yes" media-type="application/xml" omit-xml-declaration="no" standalone="no"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:see</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:see>empty-in.xsl</xd:see>
                  <xd:see>http://code.google.com/p/daisy-pipeline/wiki/HowTo_Documentation_Technical</xd:see>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d300e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <related-links>
                     <linklist>
                        <title>See also</title>
                        <link href="empty-in.xsl" format="ditamap"/>
                        <link href="http://code.google.com/p/daisy-pipeline/wiki/HowTo_Documentation_Technical" format="ditamap"/>
                        <linkinfo>These are related readings suggested by the author of the XSLT
                           stylesheet.</linkinfo>
                     </linklist>
                  </related-links>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:short</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:short>Short description.</xd:short>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d331e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>Short description.</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:include</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xsl:include href="import-and-include-me.xsl"/>

               <xd:doc xd:target="parent">
                  <xd:short>xsl:include</xd:short>
                  <xd:detail>Includes are automatically documented.</xd:detail>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d359e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <related-links>
                     <linklist>
                        <title>Dependencies (xsl:include)</title>
                        <link href="import-and-include-me.xsl" format="ditamap"/>
                        <linkinfo>These dependencies are derived from the xsl:include
                           statements.</linkinfo>
                     </linklist>
                  </related-links>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:include href="import-and-include-me.xsl"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:character-map</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc>
                  <xd:short>xd:character-map</xd:short>
               </xd:doc>

               <xd:doc xd:target="following">
                  <xd:short>Character map</xd:short>
               </xd:doc>
               <xsl:character-map name="jsp">
                  <xsl:output-character character="«" string="&lt;%"/>
                  <xsl:output-character character="»" string="%&gt;"/>
                  <xsl:output-character character="§" string="&quot;"/>
               </xsl:character-map>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d400e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xd:character-map</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:character-map name="jsp"&gt;
        &lt;xsl:output-character character="«" string="&amp;lt;%"/&gt;   
        &lt;xsl:output-character character="»" string="%&gt;"/&gt;
        &lt;xsl:output-character character="§" string="&amp;quot;"/&gt;
    &lt;/xsl:character-map&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
               <reference id="d2e15">
                  <title>xsl:character-map - jsp</title>
                  <abstract>
                     <shortdesc>Character map</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:character-map - jsp</apiname>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:character-map name="jsp" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
        &lt;xsl:output-character character="«" string="&amp;lt;%"/&gt;   
        &lt;xsl:output-character character="»" string="%&gt;"/&gt;
        &lt;xsl:output-character character="§" string="&amp;quot;"/&gt;
    &lt;/xsl:character-map&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:template</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="2.0">

               <xd:doc>
                  <xd:short>xsl:template</xd:short>
               </xd:doc>

               <xd:doc xd:target="following">
                  <xd:short>Identity template</xd:short>
                  <xd:param name="myParam">My parameter</xd:param>
               </xd:doc>
               <xsl:template match="@*|node()" mode="myMode" name="myName" priority="2">
                  <xsl:param name="myParam" required="yes" tunnel="yes"/>
                  <xsl:copy>
                     <xsl:apply-templates/>
                  </xsl:copy>
               </xsl:template>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d509e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:template</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="2.0"/>
                        <othermeta name="xpath-version" content="2.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:template match="@*|node()" mode="myMode" name="myName" priority="2"&gt;
        &lt;xsl:param name="myParam" required="yes" tunnel="yes"/&gt;
        &lt;xsl:copy&gt;
            &lt;xsl:apply-templates/&gt;
        &lt;/xsl:copy&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
               <reference id="d2e18">
                  <title>xsl:template - myName - match="@*|node()"</title>
                  <abstract>
                     <shortdesc>Identity template</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:template - myName - match="@*|node()"</apiname>
                     </section>
                     <section outputclass="parameters xslt-params">
                        <title outputclass="io-header">Parameters (xsl:param /
                           xsl:with-param)</title>
                        <parml outputclass="xslt-params">
                           <plentry>
                              <pt>myParam</pt>
                              <pt>undefined</pt>
                              <pt>false</pt>
                              <pt>yes</pt>
                              <pd>My parameter</pd>
                           </plentry>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:template match="@*|node()" mode="myMode" name="myName" priority="2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
        &lt;xsl:param name="myParam" required="yes" tunnel="yes"/&gt;
        &lt;xsl:copy&gt;
            &lt;xsl:apply-templates/&gt;
        &lt;/xsl:copy&gt;
    &lt;/xsl:template&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:param</utfx:name>
      <utfx:assert-equal>
         <utfx:source>
            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:param name="myParam">This is a parameter.</xd:param>
               </xd:doc>

               <xsl:param name="myParam"/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d630e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-params">
                        <title outputclass="io-header">Parameters (xsl:param /
                           xsl:with-param)</title>
                        <parml outputclass="xslt-params">
                           <plentry>
                              <pt>myParam</pt>
                              <pt>undefined</pt>
                              <pt>false</pt>
                              <pt>no</pt>
                              <pd>This is a parameter.</pd>
                           </plentry>
                        </parml>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:param name="myParam"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:key</utfx:name>
      <utfx:assert-equal>
         <utfx:source>
            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc>
                  <xd:short>xsl:key</xd:short>
                  <xd:detail>xsl:keys should be documented automatically.</xd:detail>
               </xd:doc>

               <xsl:key name="preg" match="person" use="@id"/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d667e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:key</shortdesc>xsl:keys should be documented
                     automatically.</abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-keys">
                        <title outputclass="io-header">Keys (xsl:key)</title>
                        <parml outputclass="xslt-params">
                           <plentry>
                              <pt>preg</pt>
                              <pt>person</pt>
                              <pt>@id</pt>
                              <pd/>
                           </plentry>
                           <plentry>
                              <pt>myParam</pt>
                              <pt>undefined</pt>
                              <pt>false</pt>
                              <pt>no</pt>
                              <pd>This is a parameter.</pd>
                           </plentry>
                        </parml>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:key name="preg" match="person" use="@id"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:detail</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:detail>Detailed description.</xd:detail>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d709e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>Detailed description.</abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:import</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xsl:import href="import-and-include-me.xsl"/>

               <xd:doc xd:target="parent">
                  <xd:short>xsl:import</xd:short>
                  <xd:detail>Imports are automatically documented.</xd:detail>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d737e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <related-links>
                     <linklist>
                        <title>Dependencies (xsl:import)</title>
                        <link href="import-and-include-me.xsl" format="ditamap"/>
                        <linkinfo>These dependencies are derived from the xsl:import
                           statements.</linkinfo>
                     </linklist>
                  </related-links>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:import href="import-and-include-me.xsl"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:preserve-space</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc>
                  <xd:short>xsl:preserve-space</xd:short>
                  <xd:detail>xsl:preserve-space should be documented automatically.</xd:detail>
               </xd:doc>

               <xsl:preserve-space elements="title artist"/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d778e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:preserve-space</shortdesc>xsl:preserve-space should be
                     documented automatically.</abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                        <othermeta name="preserve-space" content="title artist"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:preserve-space elements="title artist"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:attribute-set</utfx:name>
      <utfx:assert-equal>
         <utfx:source>
            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc>
                  <xd:short>xsl:attribute-set</xd:short>
                  <xd:detail>xsl:attribute-set won't be documented.</xd:detail>
               </xd:doc>

               <xsl:attribute-set name="title-style">
                  <xsl:attribute name="font-size">12pt</xsl:attribute>
                  <xsl:attribute name="font-weight">bold</xsl:attribute>
               </xsl:attribute-set>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d814e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:attribute-set</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:attribute-set name="title-style"&gt;
        &lt;xsl:attribute name="font-size"&gt;12pt&lt;/xsl:attribute&gt;
        &lt;xsl:attribute name="font-weight"&gt;bold&lt;/xsl:attribute&gt;
    &lt;/xsl:attribute-set&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:namespace-alias</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wxsl="http://www.w3schools.com/w3style.xsl" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="2.0">

               <xd:doc>
                  <xd:short>xsl:namespace-alias</xd:short>
                  <xd:detail>xsl:namespace-alias should be automatically documented.</xd:detail>
               </xd:doc>

               <xsl:namespace-alias stylesheet-prefix="wxsl" result-prefix="xsl"/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d866e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:namespace-alias</shortdesc>xsl:namespace-alias should be
                     automatically documented.</abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="2.0"/>
                        <othermeta name="xpath-version" content="2.0"/>
                        <data name="namespace-alias">
                           <data name="from" value="wxsl"/>
                           <data name="to" value="xsl"/>
                        </data>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:namespace-alias stylesheet-prefix="wxsl" result-prefix="xsl"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:function</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mynamespace="http://example.org" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="2.0">

               <xd:doc>
                  <xd:short>xd:function</xd:short>
               </xd:doc>

               <xd:doc target="following">
                  <xd:short>Test function</xd:short>
                  <xd:detail>Contains one undocumented and one documented parameter, as well as a
                     documented return value.</xd:detail>
                  <xd:param name="myParam">This is a parameter.</xd:param>
                  <xd:return>This function returns something.</xd:return>
               </xd:doc>
               <xsl:function name="mynamespace:myFunction">
                  <xsl:param name="myParam" tunnel="no" as="xs:string"/>
                  <xsl:param name="myOtherParam"/>
                  <xsl:value-of select="'myValue'"/>
               </xsl:function>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d905e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xd:function</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="2.0"/>
                        <othermeta name="xpath-version" content="2.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:function name="mynamespace:myFunction"&gt;
        &lt;xsl:param name="myParam" tunnel="no" as="xs:string"/&gt;
        &lt;xsl:param name="myOtherParam"/&gt;
        &lt;xsl:value-of select="'myValue'"/&gt;
    &lt;/xsl:function&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
               <reference id="d2e24">
                  <title>xsl:function - mynamespace:myFunction</title>
                  <abstract>
                     <shortdesc>Test function</shortdesc>Contains one undocumented and one
                     documented parameter, as well as a documented return value.</abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:function - mynamespace:myFunction</apiname>
                     </section>
                     <section outputclass="parameters xslt-params">
                        <title outputclass="io-header">Parameters (xsl:param /
                           xsl:with-param)</title>
                        <parml outputclass="xslt-params">
                           <plentry>
                              <pt>myParam</pt>
                              <pt>xs:string</pt>
                              <pt>true</pt>
                              <pt>no</pt>
                              <pd>This is a parameter.</pd>
                           </plentry>
                           <plentry>
                              <pt>myOtherParam</pt>
                              <pt>undefined</pt>
                              <pt>true</pt>
                              <pt>no</pt>
                              <pd/>
                           </plentry>
                        </parml>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Returns</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pd>This function returns something.</pd>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:function name="mynamespace:myFunction" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
        &lt;xsl:param name="myParam" tunnel="no" as="xs:string"/&gt;
        &lt;xsl:param name="myOtherParam"/&gt;
        &lt;xsl:value-of select="'myValue'"/&gt;
    &lt;/xsl:function&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:author</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:author>
                     <xd:name>First Author</xd:name>
                     <xd:mailto>first.author@example.com</xd:mailto>
                     <xd:organization>First Author Inc.</xd:organization>
                  </xd:author>
                  <xd:author>
                     <xd:name>Second Author</xd:name>
                     <xd:mailto>second.author@example.com</xd:mailto>
                     <xd:organization>Second Author Inc.</xd:organization>
                  </xd:author>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1386e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <author type="creator">First Author, First Author Inc.,
                        first.author@example.com</author>
                     <author type="creator">Second Author, Second Author Inc.,
                        second.author@example.com</author>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:decimal-format</utfx:name>
      <utfx:assert-equal>
         <utfx:source>
            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="2.0">

               <xd:doc>
                  <xd:short>xsl:decimal-format</xd:short>
                  <xd:detail>xsl:decimal-format will not be documented.</xd:detail>
               </xd:doc>

               <xsl:decimal-format name="euro" decimal-separator="," grouping-separator="."/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1449e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:decimal-format</shortdesc>xsl:decimal-format will not be
                     documented. </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="2.0"/>
                        <othermeta name="xpath-version" content="2.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:decimal-format name="euro" decimal-separator="," grouping-separator="."/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:param</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="2.0">

               <xd:doc>
                  <xd:short>xsl:param</xd:short>
                  <xd:param name="myDocumentedParam">A parameter with documentation.</xd:param>
               </xd:doc>

               <xsl:param name="myDocumentedParam" select="'myDocumentedValue'" required="no" tunnel="no"/>
               <xsl:param name="myUndocumentedParam" required="yes" tunnel="no" exclude-result-prefixes="#all"/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1512e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:param</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="2.0"/>
                        <othermeta name="xpath-version" content="2.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-params">
                        <title outputclass="io-header">Parameters (xsl:param /
                           xsl:with-param)</title>
                        <parml outputclass="xslt-params">
                           <plentry>
                              <pt>myDocumentedParam</pt>
                              <pt>undefined</pt>
                              <pt>false</pt>
                              <pt>no</pt>
                              <pd>A parameter with documentation.</pd>
                           </plentry>
                           <plentry>
                              <pt>myUndocumentedParam</pt>
                              <pt>undefined</pt>
                              <pt>false</pt>
                              <pt>no</pt>
                              <pd/>
                           </plentry>
                        </parml>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:param name="myDocumentedParam" select="'myDocumentedValue'" required="no" tunnel="no"/&gt;
    &lt;xsl:param name="myUndocumentedParam" required="yes" tunnel="no" exclude-result-prefixes="#all"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:variable</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="2.0">

               <xd:doc>
                  <xd:short>xsl:variable</xd:short>
               </xd:doc>

               <xd:doc xd:target="following">
                  <xd:short>This is a documented variable.</xd:short>
                  <xd:detail>Variables with attached documentation will be documented. Those without
                     attached documentation will not.</xd:detail>
               </xd:doc>
               <xsl:variable name="documentedVariable" select="'myValue'"/>

               <xsl:variable name="undocumentedVariable" select="'myOtherValue'"/>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1575e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:variable</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="2.0"/>
                        <othermeta name="xpath-version" content="2.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:variable name="myVariable" select="'myValue'"/&gt;
    &lt;xsl:variable name="undocumentedVariable" select="'myOtherValue'"/&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
               <reference id="d2e15">
                  <title>xsl:variable - documentedVariable</title>
                  <abstract>
                     <shortdesc>This is a documented variable.</shortdesc>Variables with attached
                     documentation will be documented. Those without attached documentation will
                     not.</abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:variable - documentedVariable</apiname>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:variable name="documentedVariable" select="'myValue'"/&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:stylesheet</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc>
                  <xd:short>Short description.</xd:short>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1632e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>Short description.</shortdesc>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:deprecated</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:deprecated>0.9</xd:deprecated>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1657e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="deprecated" content="0.9"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>xsl:import-schema</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="2.0">

               <xsl:import-schema>
                  <xs:schema targetNamespace="http://example.org">
                     <xs:simpleType name="yes-no">
                        <xs:restriction base="xs:string">
                           <xs:enumeration value="yes"/>
                           <xs:enumeration value="no"/>
                        </xs:restriction>
                     </xs:simpleType>
                  </xs:schema>
               </xsl:import-schema>

               <xd:doc xd:target="parent">
                  <xd:short>xsl:import-schema</xd:short>
                  <xd:detail>Imported Schemas are currently not being documented. Should they
                     be?</xd:detail>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1685e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc>xsl:import-schema</shortdesc>Imported Schemas are currently not
                     being documented. Should they be? </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="2.0"/>
                        <othermeta name="xpath-version" content="2.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:import-schema&gt;
        &lt;xs:schema targetNamespace="http://example.org"&gt;
            &lt;xs:simpleType name="yes-no"&gt;
                &lt;xs:restriction base="xs:string"&gt;
                    &lt;xs:enumeration value="yes"/&gt;
                    &lt;xs:enumeration value="no"/&gt;
                &lt;/xs:restriction&gt;
            &lt;/xs:simpleType&gt;
        &lt;/xs:schema&gt;
    &lt;/xsl:import-schema&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:return</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mynamespace="http://example.org" version="2.0">

               <xd:doc target="following">
                  <xd:return>This function returns something.</xd:return>
               </xd:doc>

               <xsl:function name="mynamespace:myFunction">
                  <xsl:value-of select="'myValue'"/>
               </xsl:function>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1766e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="2.0"/>
                        <othermeta name="xpath-version" content="2.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
    &lt;xsl:function name="mynamespace:myFunction"&gt;
        &lt;xsl:value-of select="'myValue'"/&gt;
    &lt;/xsl:function&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
               <reference id="d2e9">
                  <title>xsl:function - mynamespace:myFunction</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:function - mynamespace:myFunction</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Returns</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pd>This function returns something.</pd>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:function name="mynamespace:myFunction" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
        &lt;xsl:value-of select="'myValue'"/&gt;
    &lt;/xsl:function&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:maintainer</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:maintainer>
                     <xd:name>First Maintainer</xd:name>
                     <xd:mailto>first.maintainer@example.com</xd:mailto>
                     <xd:organization>First Maintainer Inc.</xd:organization>
                  </xd:maintainer>
                  <xd:maintainer>
                     <xd:name>Second Maintainer</xd:name>
                     <xd:mailto>second.maintainer@example.com</xd:mailto>
                     <xd:organization>Second Maintainer Inc.</xd:organization>
                  </xd:maintainer>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1825e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <author type="maintainer">First Maintainer, First Maintainer Inc.,
                        first.maintainer@example.com</author>
                     <author type="maintainer">Second Maintainer, Second Maintainer Inc.,
                        second.maintainer@example.com</author>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:contributor</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:contributor>
                     <xd:name>First Contributor</xd:name>
                     <xd:mailto>first.contributor@example.com</xd:mailto>
                     <xd:organization>First Contributor Inc.</xd:organization>
                  </xd:contributor>
                  <xd:contributor>
                     <xd:name>Second Contributor</xd:name>
                     <xd:mailto>second.contributor@example.com</xd:mailto>
                     <xd:organization>Second Contributor Inc.</xd:organization>
                  </xd:contributor>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1888e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <author type="contributor">First Contributor, First Contributor Inc.,
                        first.contributor@example.com</author>
                     <author type="contributor">Second Contributor, Second Contributor Inc.,
                        second.contributor@example.com</author>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
   <utfx:test>
      <utfx:name>doc:since</utfx:name>
      <utfx:assert-equal>
         <utfx:source>

            <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc" version="1.0">

               <xd:doc target="parent">
                  <xd:since>0.5</xd:since>
               </xd:doc>

            </xsl:stylesheet>
         </utfx:source>
         <utfx:expected>
            <dita>
               <reference id="d1951e2">
                  <title>xsl:stylesheet</title>
                  <abstract>
                     <shortdesc/>
                  </abstract>
                  <prolog>
                     <metadata>
                        <audience type="programmer" job="programming" experiencelevel="expert"/>
                        <othermeta name="programming-language" content="XSLT"/>
                        <othermeta name="since" content="0.5"/>
                        <othermeta name="xslt-version" content="1.0"/>
                        <othermeta name="xpath-version" content="1.0"/>
                     </metadata>
                  </prolog>
                  <refbody>
                     <section>
                        <apiname>xsl:stylesheet</apiname>
                     </section>
                     <section outputclass="parameters xslt-outputs">
                        <title outputclass="io-header">Outputs (xsl:output)</title>
                        <parml outputclass="xslt-outputs">
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt/>
                           <pt>yes</pt>
                           <pt/>
                           <pt/>
                           <pt>no</pt>
                           <pt>omit</pt>
                           <pt/>
                           <pd/>
                        </parml>
                     </section>
                  </refbody>
                  <section outputclass="sourcecode">
                     <title outputclass="sourcecode-header">Source Code</title>
                     <codeblock>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
&lt;/xsl:stylesheet&gt;</codeblock>
                  </section>
               </reference>
            </dita>
         </utfx:expected>
      </utfx:assert-equal>
   </utfx:test>
</utfx:tests>
