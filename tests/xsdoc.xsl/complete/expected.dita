<dita>
   <reference id="d2e1">
      <title>xsl:stylesheet</title>
      <abstract>
         <shortdesc>Complete test.</shortdesc>This example tests as much as possible at the same time.</abstract>
      <prolog>
         <author type="creator">First Author, First Author Inc., first.author@example.com</author>
         <author type="creator">Second Author, Second Author Inc., second.author@example.com</author>
         <author type="contributor">First Contributor, First Contributor Inc., first.contributor@example.com</author>
         <author type="contributor">Second Contributor, Second Contributor Inc., second.contributor@example.com</author>
         <author type="maintainer">First Maintainer, First Maintainer Inc., first.maintainer@example.com</author>
         <author type="maintainer">Second Maintainer, Second Maintainer Inc., second.maintainer@example.com</author>
         <copyright>
            <copyryear year="20112011"/>
            <copyrholder>Copyright Holder</copyrholder>
         </copyright>
         <copyright>
            <copyryear year="20112011"/>
            <copyrholder>Copyright Holder</copyrholder>
         </copyright>
         <metadata>
            <audience type="programmer" job="programming" experiencelevel="expert"/>
            <othermeta name="programming-language" content="XSLT"/>
            <othermeta name="version" content="1.0"/>
            <othermeta name="since" content="0.5"/>
            <othermeta name="deprecated" content="0.9"/>
            <othermeta name="xslt-version" content="2.0"/>
            <othermeta name="xpath-version" content="2.0"/>
         </metadata>
      </prolog>
      <refbody>
         <section>
            <apiname>xsl:stylesheet</apiname>
         </section>
         <section outputclass="parameters xslt-outputs">
            <title outputclass="io-header">Outputs (xsl:output)</title>
            <parml outputclass="xslt-outputs">
               <pt/>
               <pt/>
               <pt/>
               <pt/>
               <pt/>
               <pt>yes</pt>
               <pt/>
               <pt/>
               <pt>no</pt>
               <pt>omit</pt>
               <pt/>
               <pd/>
            </parml>
         </section>
      </refbody>
      <related-links>
         <linklist>
            <title>See also</title>
            <link href="empty-in.xsl" format="ditamap"/>
            <link href="http://code.google.com/p/daisy-pipeline/wiki/HowTo_Documentation_Technical"
                  format="ditamap"/>
            <linkinfo>These are related readings suggested by the author of the XSLT
                stylesheet.</linkinfo>
         </linklist>
      </related-links>
      <section outputclass="sourcecode">
         <title outputclass="sourcecode-header">Source Code</title>
         <codeblock>&lt;xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;

    &lt;xd:doc target="parent"&gt;
        &lt;xd:short&gt;Complete test.&lt;/xd:short&gt;
        &lt;xd:detail&gt;This example tests as much as possible at the same time.&lt;/xd:detail&gt;
        &lt;xd:author&gt;
            &lt;xd:name&gt;First Author&lt;/xd:name&gt;
            &lt;xd:mailto&gt;first.author@example.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;First Author Inc.&lt;/xd:organization&gt;
        &lt;/xd:author&gt;
        &lt;xd:author&gt;
            &lt;xd:name&gt;Second Author&lt;/xd:name&gt;
            &lt;xd:mailto&gt;second.author@example.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;Second Author Inc.&lt;/xd:organization&gt;
        &lt;/xd:author&gt;
        &lt;xd:contributor&gt;
            &lt;xd:name&gt;First Contributor&lt;/xd:name&gt;
            &lt;xd:mailto&gt;first.contributor@example.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;First Contributor Inc.&lt;/xd:organization&gt;
        &lt;/xd:contributor&gt;
        &lt;xd:contributor&gt;
            &lt;xd:name&gt;Second Contributor&lt;/xd:name&gt;
            &lt;xd:mailto&gt;second.contributor@example.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;Second Contributor Inc.&lt;/xd:organization&gt;
        &lt;/xd:contributor&gt;
        &lt;xd:maintainer&gt;
            &lt;xd:name&gt;First Maintainer&lt;/xd:name&gt;
            &lt;xd:mailto&gt;first.maintainer@example.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;First Maintainer Inc.&lt;/xd:organization&gt;
        &lt;/xd:maintainer&gt;
        &lt;xd:maintainer&gt;
            &lt;xd:name&gt;Second Maintainer&lt;/xd:name&gt;
            &lt;xd:mailto&gt;second.maintainer@example.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;Second Maintainer Inc.&lt;/xd:organization&gt;
        &lt;/xd:maintainer&gt;
        &lt;xd:copyright&gt;
            &lt;xd:year&gt;2011&lt;/xd:year&gt;
            &lt;xd:name&gt;Copyright Holder&lt;/xd:name&gt;
            &lt;xd:mailto&gt;copyright.holder@example.com&lt;/xd:mailto&gt;
            &lt;xd:organization&gt;Copyright Holder Inc.&lt;/xd:organization&gt;
        &lt;/xd:copyright&gt;
        &lt;xd:copyright&gt;
            &lt;xd:year&gt;2011&lt;/xd:year&gt;
            &lt;xd:holder&gt;Copyright Holder&lt;/xd:holder&gt;
        &lt;/xd:copyright&gt;
        &lt;xd:version&gt;1.0&lt;/xd:version&gt;
        &lt;xd:since&gt;0.5&lt;/xd:since&gt;
        &lt;xd:see&gt;empty-in.xsl&lt;/xd:see&gt;
        &lt;xd:see&gt;http://code.google.com/p/daisy-pipeline/wiki/HowTo_Documentation_Technical&lt;/xd:see&gt;
        &lt;xd:deprecated&gt;0.9&lt;/xd:deprecated&gt;
    &lt;/xd:doc&gt;

    &lt;xsl:template match="@*|node()"&gt;
        &lt;xd:doc&gt;
            &lt;xd:short&gt;Identity template&lt;/xd:short&gt;
        &lt;/xd:doc&gt;
        &lt;xsl:copy&gt;
            &lt;xsl:apply-templates/&gt;
        &lt;/xsl:copy&gt;
    &lt;/xsl:template&gt;

    &lt;xd:doc target="following"&gt;
        &lt;xd:short&gt;Test function&lt;/xd:short&gt;
        &lt;xd:detail&gt;Contains one undocumented and one documented parameter, as well as a documented
            return value.&lt;/xd:detail&gt;
        &lt;xd:param name="myParam"&gt;This is a parameter.&lt;/xd:param&gt;
        &lt;xd:return&gt;This function returns something.&lt;/xd:return&gt;
    &lt;/xd:doc&gt;
    &lt;xsl:function name="mynamespace:myFunction"&gt;
        &lt;xsl:param name="myParam"/&gt;
        &lt;xsl:param name="myOtherParam"/&gt;
        &lt;xsl:value-of select="'myValue'"/&gt;
    &lt;/xsl:function&gt;

&lt;/xsl:stylesheet&gt;</codeblock>
      </section>
   </reference>
   <reference id="d2e125">
      <title>xsl:template</title>
      <abstract>
         <shortdesc>Identity template</shortdesc>
      </abstract>
      <prolog>
         <metadata>
            <audience type="programmer" job="programming" experiencelevel="expert"/>
            <othermeta name="programming-language" content="XSLT"/>
         </metadata>
      </prolog>
      <refbody>
         <section>
            <apiname>xsl:template</apiname>
         </section>
      </refbody>
      <section outputclass="sourcecode">
         <title outputclass="sourcecode-header">Source Code</title>
         <codeblock>&lt;xsl:template match="@*|node()" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xd="http://pipeline.daisy.org/ns/sample/doc"&gt;
        &lt;xd:doc&gt;
            &lt;xd:short&gt;Identity template&lt;/xd:short&gt;
        &lt;/xd:doc&gt;
        &lt;xsl:copy&gt;
            &lt;xsl:apply-templates/&gt;
        &lt;/xsl:copy&gt;
    &lt;/xsl:template&gt;</codeblock>
      </section>
   </reference>
   <reference id="d2e154">
      <title>xsl:function - mynamespace:myFunction</title>
      <abstract>
         <shortdesc>Test function</shortdesc>Contains one undocumented and one documented parameter, as well as a documented
            return value.</abstract>
      <prolog>
         <metadata>
            <audience type="programmer" job="programming" experiencelevel="expert"/>
            <othermeta name="programming-language" content="XSLT"/>
         </metadata>
      </prolog>
      <refbody>
         <section>
            <apiname>xsl:function - mynamespace:myFunction</apiname>
         </section>
         <section outputclass="parameters xslt-params">
            <title outputclass="io-header">Parameters (xsl:param / xsl:with-param)</title>
            <parml outputclass="xslt-params">
               <plentry>
                  <pt>myParam</pt>
                  <pt>undefined</pt>
                  <pt>true</pt>
                  <pt>no</pt>
                  <pd>This is a parameter.</pd>
               </plentry>
               <plentry>
                  <pt>myOtherParam</pt>
                  <pt>undefined</pt>
                  <pt>true</pt>
                  <pt>no</pt>
                  <pd/>
               </plentry>
            </parml>
         </section>
      </refbody>
      <section outputclass="sourcecode">
         <title outputclass="sourcecode-header">Source Code</title>
         <codeblock>&lt;xsl:function name="mynamespace:myFunction" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
        &lt;xsl:param name="myParam"/&gt;
        &lt;xsl:param name="myOtherParam"/&gt;
        &lt;xsl:value-of select="'myValue'"/&gt;
    &lt;/xsl:function&gt;</codeblock>
      </section>
   </reference>
</dita>